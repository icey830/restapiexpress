exports.send = function(req, res, resource) {

    /*
     TODO now we know, the role has access to this resource, but we don't know if the logged in user has access to the date so prove access rights to data (read, write, execute)
     */

    //TODO send options
    var documentation = resource.documentationJson;
    var options = [];

    documentation.permission.forEach(function(permission) {

        if(permission.role.toLowerCase() === resource.role.toLowerCase())
            permission.methods.forEach(function(method) {

                if(method.toUpperCase() === "GET") {
                    var option = {
                        "GET" : {
                            "description": "read " + documentation.title,
                            "parameters" : documentation.parameters

                        }
                    }
                    options.push(option);
                } else if(method.toUpperCase() === "POST" ) {
                    var option = {

                    }
                    option[method.toUpperCase()]=  {
                        "description": "update existing instance of " + documentation.title,
                        "parameters" : documentation.model

                    }
                    options.push(option);
                } else if(method.toUpperCase() === "PUT" ) {
                    var option = {

                    }
                    option[method.toUpperCase()]=  {
                        "description": "update or create instance of " + documentation.title,
                        "parameters" : documentation.model

                    }
                    options.push(option);
                } else if(method.toUpperCase() === "PATCH" ) {
                    var option = {

                    }
                    option[method.toUpperCase()]=  {
                        "description": "update deltas or create instance of " + documentation.title,
                        "parameters" : documentation.model

                    }
                    options.push(option);
                }
            });

    });


    res.status(200).json({"options" : options});

};


